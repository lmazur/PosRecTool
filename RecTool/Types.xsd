<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Types" targetNamespace="http://tempuri.org/Types.xsd" xmlns:mstns="http://tempuri.org/Types.xsd" xmlns="http://tempuri.org/Types.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="RECONConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="RECONConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.RecTool.Properties.Settings.GlobalReference.Default.RECONConnectionString" Provider="System.Data.SqlClient">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RecTypeTableAdapter" GeneratorDataComponentClassName="RecTypeTableAdapter" Name="RecType" UserDataComponentName="RecTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RECONConnectionString (Settings)" DbObjectName="RECON.dbo.RecType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [dbo].[RecType] WHERE (([rec_type_id] = @Original_rec_type_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rec_type_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rec_type_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[RecType] ([name]) VALUES (@name);
SELECT rec_type_id, name FROM RecType WHERE (rec_type_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT rec_type_id, name FROM dbo.RecType</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [dbo].[RecType] SET [name] = @name WHERE (([rec_type_id] = @Original_rec_type_id) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)));
SELECT rec_type_id, name FROM RecType WHERE (rec_type_id = @rec_type_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_rec_type_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="rec_type_id" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="True" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="rec_type_id" ColumnName="rec_type_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@rec_type_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="rec_type_id" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="rec_type_id" DataSetColumn="rec_type_id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExplainTypeTableAdapter" GeneratorDataComponentClassName="ExplainTypeTableAdapter" Name="ExplainType" UserDataComponentName="ExplainTypeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RECONConnectionString (Settings)" DbObjectName="RECON.dbo.ExplainType" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[ExplainType] ([Type]) VALUES (@Type)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="True" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Type" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Type" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT ExplainTypeId, Type FROM dbo.ExplainType</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ExplainTypeId" DataSetColumn="ExplainTypeId" />
              <Mapping SourceColumn="Type" DataSetColumn="Type" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountMappingTableAdapter" GeneratorDataComponentClassName="AccountMappingTableAdapter" Name="AccountMapping" UserDataComponentName="AccountMappingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RECONConnectionString (Settings)" DbObjectName="RECON.dbo.AccountMapping" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="True" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [dbo].[AccountMapping] WHERE (([MapId] = @Original_MapId) AND ([FAName] = @Original_FAName) AND ([OtherName] = @Original_OtherName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapId" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FAName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FAName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_OtherName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OtherName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [dbo].[AccountMapping] ([FAName], [OtherName]) VALUES (@FAName, @OtherName);
SELECT MapId, FAName, OtherName FROM AccountMapping WHERE (MapId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FAName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FAName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@OtherName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OtherName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>SELECT MapId, FAName, OtherName FROM dbo.AccountMapping</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [dbo].[AccountMapping] SET [FAName] = @FAName, [OtherName] = @OtherName WHERE (([MapId] = @Original_MapId) AND ([FAName] = @Original_FAName) AND ([OtherName] = @Original_OtherName));
SELECT MapId, FAName, OtherName FROM AccountMapping WHERE (MapId = @MapId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FAName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FAName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@OtherName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OtherName" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MapId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MapId" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FAName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FAName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_OtherName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="OtherName" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="MapId" ColumnName="MapId" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MapId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MapId" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MapId" DataSetColumn="MapId" />
              <Mapping SourceColumn="FAName" DataSetColumn="FAName" />
              <Mapping SourceColumn="OtherName" DataSetColumn="OtherName" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Types" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="Types" msprop:Generator_DataSetName="Types">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="RecType" msprop:Generator_UserTableName="RecType" msprop:Generator_RowDeletedName="RecTypeRowDeleted" msprop:Generator_TableClassName="RecTypeDataTable" msprop:Generator_RowChangedName="RecTypeRowChanged" msprop:Generator_RowClassName="RecTypeRow" msprop:Generator_RowChangingName="RecTypeRowChanging" msprop:Generator_RowEvArgName="RecTypeRowChangeEvent" msprop:Generator_RowEvHandlerName="RecTypeRowChangeEventHandler" msprop:Generator_TablePropName="RecType" msprop:Generator_TableVarName="tableRecType" msprop:Generator_RowDeletingName="RecTypeRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="rec_type_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="rec_type_id" msprop:Generator_ColumnPropNameInRow="rec_type_id" msprop:Generator_ColumnVarNameInTable="columnrec_type_id" msprop:Generator_ColumnPropNameInTable="rec_type_idColumn" type="xs:int" />
              <xs:element name="name" msprop:Generator_UserColumnName="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInTable="nameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExplainType" msprop:Generator_UserTableName="ExplainType" msprop:Generator_RowDeletedName="ExplainTypeRowDeleted" msprop:Generator_TableClassName="ExplainTypeDataTable" msprop:Generator_RowChangedName="ExplainTypeRowChanged" msprop:Generator_RowClassName="ExplainTypeRow" msprop:Generator_RowChangingName="ExplainTypeRowChanging" msprop:Generator_RowEvArgName="ExplainTypeRowChangeEvent" msprop:Generator_RowEvHandlerName="ExplainTypeRowChangeEventHandler" msprop:Generator_TablePropName="ExplainType" msprop:Generator_TableVarName="tableExplainType" msprop:Generator_RowDeletingName="ExplainTypeRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ExplainTypeId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="ExplainTypeId" msprop:Generator_ColumnPropNameInRow="ExplainTypeId" msprop:Generator_ColumnVarNameInTable="columnExplainTypeId" msprop:Generator_ColumnPropNameInTable="ExplainTypeIdColumn" type="xs:int" />
              <xs:element name="Type" msprop:Generator_UserColumnName="Type" msprop:Generator_ColumnPropNameInRow="Type" msprop:Generator_ColumnVarNameInTable="columnType" msprop:Generator_ColumnPropNameInTable="TypeColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AccountMapping" msprop:Generator_UserTableName="AccountMapping" msprop:Generator_RowDeletedName="AccountMappingRowDeleted" msprop:Generator_TableClassName="AccountMappingDataTable" msprop:Generator_RowChangedName="AccountMappingRowChanged" msprop:Generator_RowClassName="AccountMappingRow" msprop:Generator_RowChangingName="AccountMappingRowChanging" msprop:Generator_RowEvArgName="AccountMappingRowChangeEvent" msprop:Generator_RowEvHandlerName="AccountMappingRowChangeEventHandler" msprop:Generator_TablePropName="AccountMapping" msprop:Generator_TableVarName="tableAccountMapping" msprop:Generator_RowDeletingName="AccountMappingRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MapId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="MapId" msprop:Generator_ColumnPropNameInRow="MapId" msprop:Generator_ColumnVarNameInTable="columnMapId" msprop:Generator_ColumnPropNameInTable="MapIdColumn" type="xs:int" />
              <xs:element name="FAName" msprop:Generator_UserColumnName="FAName" msprop:Generator_ColumnPropNameInRow="FAName" msprop:Generator_ColumnVarNameInTable="columnFAName" msprop:Generator_ColumnPropNameInTable="FANameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="120" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="OtherName" msprop:Generator_UserColumnName="OtherName" msprop:Generator_ColumnPropNameInRow="OtherName" msprop:Generator_ColumnVarNameInTable="columnOtherName" msprop:Generator_ColumnPropNameInTable="OtherNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="120" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RecType" />
      <xs:field xpath="mstns:rec_type_id" />
    </xs:unique>
    <xs:unique name="AccountMapping_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccountMapping" />
      <xs:field xpath="mstns:MapId" />
    </xs:unique>
  </xs:element>
</xs:schema>